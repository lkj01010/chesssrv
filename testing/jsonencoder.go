package main
import (
	"encoding/json"
	"fmt"
)



type AutoGenerated struct {
	InputIndex int `json:"input_index"`
	Components []  struct {
		PrimaryNumber string `json:"primary_number"`
	} `json:"components"`
}


func TestJson() {
	jsonstr := `{
		input_index:1,
		components:[
			{
				primary_number:"fjfjfjfjf"
			},
			{
				primary_number:"nnn2"
			}
		]
	}`
	a := new(AutoGenerated)
	fmt.Printf("struct is %#v", a)

	//	b := a.Components[0].PrimaryNumber
	//	t.Logf("b is %#v", b)

	var ag AutoGenerated
	c := json.Unmarshal([]byte(jsonstr), ag)

	fmt.Printf("a is %#v, c is %#v", a, c)

	//------------
	type stru2 struct {
		InputIndex int `json:"input_index"`
		Components string `json:"components"`
	}

	stru2inst := stru2{InputIndex:3, Components: "small"}
	jsonstr2, _ := json.Marshal(stru2inst)
//	jsonstr2 := `{
//		input_index:1,
//		components:"sjjssjj"
//	}`
	fmt.Printf("jsonstr2 is %#v \n",jsonstr2)
	var st stru2
	d := json.Unmarshal([]byte(jsonstr2), &st)
	if d != nil {
		fmt.Errorf("unmarshal error: %#v", d)
		return
	}
	fmt.Printf("d is %#v", st)
}

func test2(){
	type stru2 struct {
		InputIndex int `json:"input_index"`
		Components string `json:"components"`
	}

	stru2inst := stru2{InputIndex:3, Components: "small"}
	jsonstr2, _ := json.Marshal(stru2inst)
	fmt.Printf("jsonstr2 is %#v \n",string(jsonstr2))
	var st stru2
	d := json.Unmarshal([]byte(jsonstr2), &st)
	if d != nil {
		fmt.Errorf("unmarshal error: %#v", d)
		return
	}
	fmt.Printf("d is %#v", st)
}

func main() {
	TestJson()
	test2()
}